module Sixten.Builtin exposing (..)

type Unit = MkUnit
type Pair A B = MkPair A B

Vector : Nat -> Type -> Type
Vector Zero _ = Unit
Vector (Succ n) A = Pair A (Vector n A)

type Array A where
  MkArray : (n : Nat) -> Ptr (Vector n A) -> Array A

Byte : Type
Byte = MkType 1

type String = MkString (Array Byte)

printString : String -> Unit
printString (MkString (MkArray len data)) = (C|
#ifdef _WIN32
  // In MSVC, fd `1` corresponds to `stdout`.
  // See: https://msdn.microsoft.com/en-us/library/40bbyw78.aspx
  _write(1, (const void*)$data, $len);
#else
  write(STDOUT_FILENO, (const void*)$data, $len);
#endif
|)

intToNat : Int -> Nat
intToNat 0 = Zero
intToNat n = Succ (intToNat (subInt n 1))
